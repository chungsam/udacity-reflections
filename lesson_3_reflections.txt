When would you want to use a remote repository rather than keeping all your work local?
- If you have more than one machine that you develop on
- If you're collaborating with multiple people
- To make sure you have a "backup" in the cloud in case something happens to your computer

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- Sometimes you may working on something you haven't quite finished yet, which doesn't add up to be a full single "logical change"
- You can have full control over which changes get "grouped" into a particular commit, and which files should be part of that commit

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- A fork is when you kind of clone a repository from someone else. You do this so that you can credit someone else by noting that it's been "forked from ___".
- You clone a repository onto your own GitHub repo if you want to make a local copy of the repo and commit changes to it.
- You create branches if you want to explore and add on features to the code while leaving the stable master branch intact. Once you're satisfied with the changes, you can merge it with the master and sync the changes.

What is the benefit of having a copy of the last known state of the remote stored locally?
- If you don't have internet access, then you can know what the most recent state of the repo was before you went offline. You can then find out what changes have been made while you were offline when you perform 'git pull origin master' later

How would you collaborate without using Git or Github? What would be easier, and what would be harder?
- One way to collaborate is through some document-storage app like Dropbox, but version control and merging would be really hard
- Just use Git!

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
- Working directly on master is much simpler, and might work for smaller projects
- Working on a separate branch allows you to be more experimental. Also, on larger projects, it might be much better to work on a separate branch and collaborate through pull requests, so that others can review and give feedback on your work
